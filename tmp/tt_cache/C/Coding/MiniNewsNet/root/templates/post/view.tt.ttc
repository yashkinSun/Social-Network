use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 3.101
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'name' => 'post/view.tt',
        'modtime' => '1742226686',
    },
    BLOCK => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;

    eval { BLOCK: {
#line 20 "C:\Coding\MiniNewsNet\root\templates\post\view.tt"

# WRAPPER
$output .=  do {
    my $output = '';
$output .=  '
<h1>';
#line 2 "C:\Coding\MiniNewsNet\root\templates\post\view.tt"
$output .=  $stash->get(['post', 0, 'title', 0]);
$output .=  '</h1>
<div>
    Автор: ';
#line 4 "C:\Coding\MiniNewsNet\root\templates\post\view.tt"
$output .=  $stash->get(['post', 0, 'user', 0, 'username', 0]);
$output .=  '
</div>
<div>
    ';
#line 7 "C:\Coding\MiniNewsNet\root\templates\post\view.tt"
$output .=  $stash->get(['post', 0, 'content', 0]);
$output .=  '
</div>
<div>
    <img src="';
#line 10 "C:\Coding\MiniNewsNet\root\templates\post\view.tt"
$output .=  $stash->get(['post', 0, 'media_url', 0]);
$output .=  '" alt="placeholder"/>
</div>

';
#line 18 "C:\Coding\MiniNewsNet\root\templates\post\view.tt"
if ($stash->get(['c', 0, 'user_exists', 0]) && $stash->get(['post', 0, 'user_id', 0]) eq $stash->get(['c', 0, 'user', 0, 'id', 0])) {
$output .=  '
    <p>
        <a href="/post/edit/';
#line 15 "C:\Coding\MiniNewsNet\root\templates\post\view.tt"
$output .=  $stash->get(['post', 0, 'id', 0]);
$output .=  '">Редактировать</a> |
        <a href="/post/delete/';
#line 16 "C:\Coding\MiniNewsNet\root\templates\post\view.tt"
$output .=  $stash->get(['post', 0, 'id', 0]);
$output .=  '" onclick="return confirm(\'Удалить пост?\');">Удалить</a>
    </p>
';
}

$output .=  '

';
    $context->include('wrapper.tt', { 'content', $output });
};

$output .=  '
';
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    DEFBLOCKS => {

    },
});
